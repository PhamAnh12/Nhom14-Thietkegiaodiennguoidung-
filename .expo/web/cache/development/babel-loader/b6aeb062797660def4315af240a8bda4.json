{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Projects\\\\App\\\\screens\\\\FlashcardsPracticeScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Card from \"../components/Card\";\nexport default function FlashcardsPracticeScreen() {\n  var flashcards = [{\n    term: 'term 1',\n    def: 'def 1'\n  }, {\n    term: 'term 2',\n    def: 'def 2'\n  }, {\n    term: 'term 3',\n    def: 'def 3'\n  }, {\n    term: 'term 4',\n    def: 'def 4'\n  }, {\n    term: 'term 5',\n    def: 'def 5'\n  }, {\n    term: 'term 6',\n    def: 'def 6'\n  }, {\n    term: 'term 7',\n    def: 'def 7'\n  }, {\n    term: 'term 8',\n    def: 'def 8'\n  }, {\n    term: 'term 9',\n    def: 'def 9'\n  }, {\n    term: 'term 10',\n    def: 'def 10'\n  }];\n\n  function shuffle(a) {\n    var j, x, i;\n\n    for (i = a.length - 1; i > 0; i--) {\n      j = Math.floor(Math.random() * (i + 1));\n      x = a[i];\n      a[i] = a[j];\n      a[j] = x;\n    }\n\n    return a;\n  }\n\n  var _useState = useState({\n    term: '',\n    def: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      chooseFlashcard = _useState2[0],\n      setChooseFlashcard = _useState2[1];\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '50%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    data: flashcards,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return setChooseFlashcard(_objectSpread({}, chooseFlashcard, {\n            term: item.term\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }\n      }, React.createElement(View, {\n        style: {\n          height: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 37\n        }\n      }, item.term))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  })), shuffle(flashcards), React.createElement(View, {\n    style: {\n      width: '50%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    data: flashcards,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return setChooseFlashcard(_objectSpread({}, chooseFlashcard, {\n            def: item.def\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }\n      }, React.createElement(View, {\n        style: {\n          height: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 37\n        }\n      }, item.def))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["F:/Projects/App/screens/FlashcardsPracticeScreen.js"],"names":["React","useState","Card","FlashcardsPracticeScreen","flashcards","term","def","shuffle","a","j","x","i","length","Math","floor","random","chooseFlashcard","setChooseFlashcard","flex","flexDirection","width","item","height"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { View, FlatList, Text, TouchableOpacity } from 'react-native'\r\nimport Card from '../components/Card'\r\n\r\nexport default function FlashcardsPracticeScreen(){\r\n    const flashcards = [\r\n        {term: 'term 1', def: 'def 1'},\r\n        {term: 'term 2', def: 'def 2'},\r\n        {term: 'term 3', def: 'def 3'},\r\n        {term: 'term 4', def: 'def 4'},\r\n        {term: 'term 5', def: 'def 5'},\r\n        {term: 'term 6', def: 'def 6'},\r\n        {term: 'term 7', def: 'def 7'},\r\n        {term: 'term 8', def: 'def 8'},\r\n        {term: 'term 9', def: 'def 9'},\r\n        {term: 'term 10', def: 'def 10'},\r\n    ]\r\n\r\n    function shuffle(a) {\r\n        let j, x, i;\r\n        for (i = a.length - 1; i > 0; i--) {\r\n            j = Math.floor(Math.random() * (i + 1));\r\n            x = a[i];\r\n            a[i] = a[j];\r\n            a[j] = x;\r\n        }\r\n        return a;\r\n    }\r\n\r\n    const [chooseFlashcard, setChooseFlashcard] = useState({term: '', def: ''})\r\n\r\n    return(\r\n        <View style={{flex: 1, flexDirection: 'row'}}>\r\n            <View style={{width: '50%'}}>\r\n                <FlatList\r\n                    data={flashcards}\r\n                    renderItem={({item}) => (\r\n                        <TouchableOpacity\r\n                            onPress={() => setChooseFlashcard({...chooseFlashcard, term: item.term})}\r\n                        >\r\n                            <Card>\r\n                                <View style={{height: 50}}>\r\n                                    <Text>{item.term}</Text>\r\n                                </View>\r\n                            </Card>\r\n                        </TouchableOpacity>\r\n                    )}\r\n                />\r\n            </View>\r\n            {shuffle(flashcards)}\r\n            <View style={{width: '50%'}}>\r\n                <FlatList\r\n                    data={flashcards}\r\n                    renderItem={({item}) => (\r\n                        <TouchableOpacity\r\n                            onPress={() => setChooseFlashcard({...chooseFlashcard, def: item.def})}\r\n                        >\r\n                            <Card>\r\n                                <View style={{height: 50}}>\r\n                                    <Text>{item.def}</Text>\r\n                                </View>\r\n                            </Card>\r\n                        </TouchableOpacity>\r\n                    )}\r\n                />\r\n            </View>\r\n        </View>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}