{"ast":null,"code":"var _jsxFileName = \"F:\\\\Projects\\\\App\\\\components\\\\DefaultTabBar.js\";\n\nvar React = require('react');\n\nvar _ReactNative = ReactNative = require('react-native'),\n    ViewPropTypes = _ReactNative.ViewPropTypes;\n\nvar PropTypes = require('prop-types');\n\nvar createReactClass = require('create-react-class');\n\nvar _ReactNative2 = ReactNative,\n    StyleSheet = _ReactNative2.StyleSheet,\n    Text = _ReactNative2.Text,\n    View = _ReactNative2.View,\n    Animated = _ReactNative2.Animated,\n    Button = _ReactNative2.Button;\nvar DefaultTabBar = createReactClass({\n  displayName: \"DefaultTabBar\",\n  propTypes: {\n    goToPage: PropTypes.func,\n    activeTab: PropTypes.number,\n    tabs: PropTypes.array,\n    backgroundColor: PropTypes.string,\n    activeTextColor: PropTypes.string,\n    inactiveTextColor: PropTypes.string,\n    textStyle: Text.propTypes.style,\n    tabStyle: ViewPropTypes.style,\n    renderTab: PropTypes.func,\n    underlineStyle: ViewPropTypes.style\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      activeTextColor: 'navy',\n      inactiveTextColor: 'black',\n      backgroundColor: null\n    };\n  },\n  renderTabOption: function renderTabOption(name, page) {},\n  renderTab: function renderTab(name, page, isTabActive, onPressHandler) {\n    var _this$props = this.props,\n        activeTextColor = _this$props.activeTextColor,\n        inactiveTextColor = _this$props.inactiveTextColor,\n        textStyle = _this$props.textStyle;\n    var textColor = isTabActive ? activeTextColor : inactiveTextColor;\n    var fontWeight = isTabActive ? 'bold' : 'normal';\n    return React.createElement(Button, {\n      style: {\n        flex: 1\n      },\n      key: name,\n      accessible: true,\n      accessibilityLabel: name,\n      accessibilityTraits: \"button\",\n      onPress: function onPress() {\n        return onPressHandler(page);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 12\n      }\n    }, React.createElement(View, {\n      style: [styles.tab, this.props.tabStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: [{\n        color: textColor,\n        fontWeight: fontWeight\n      }, textStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, name)));\n  },\n  render: function render() {\n    var _this = this;\n\n    var containerWidth = this.props.containerWidth;\n    var numberOfTabs = this.props.tabs.length;\n    var tabUnderlineStyle = {\n      position: 'absolute',\n      width: containerWidth / numberOfTabs,\n      height: 4,\n      backgroundColor: 'navy',\n      bottom: 0\n    };\n    var translateX = this.props.scrollValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, containerWidth / numberOfTabs]\n    });\n    return React.createElement(View, {\n      style: [styles.tabs, {\n        backgroundColor: this.props.backgroundColor\n      }, this.props.style],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, this.props.tabs.map(function (name, page) {\n      var isTabActive = _this.props.activeTab === page;\n      var renderTab = _this.props.renderTab || _this.renderTab;\n      return renderTab(name, page, isTabActive, _this.props.goToPage);\n    }), React.createElement(Animated.View, {\n      style: [tabUnderlineStyle, {\n        transform: [{\n          translateX: translateX\n        }]\n      }, this.props.underlineStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }));\n  }\n});\nvar styles = StyleSheet.create({\n  tab: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingBottom: 10\n  },\n  tabs: {\n    height: 50,\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    borderWidth: 1,\n    borderTopWidth: 0,\n    borderLeftWidth: 0,\n    borderRightWidth: 0,\n    borderColor: '#ccc'\n  }\n});\nmodule.exports = DefaultTabBar;","map":{"version":3,"sources":["F:/Projects/App/components/DefaultTabBar.js"],"names":["React","require","ReactNative","ViewPropTypes","PropTypes","createReactClass","StyleSheet","Text","View","Animated","Button","DefaultTabBar","propTypes","goToPage","func","activeTab","number","tabs","array","backgroundColor","string","activeTextColor","inactiveTextColor","textStyle","style","tabStyle","renderTab","underlineStyle","getDefaultProps","renderTabOption","name","page","isTabActive","onPressHandler","props","textColor","fontWeight","flex","styles","tab","color","render","containerWidth","numberOfTabs","length","tabUnderlineStyle","position","width","height","bottom","translateX","scrollValue","interpolate","inputRange","outputRange","map","transform","create","alignItems","justifyContent","paddingBottom","flexDirection","borderWidth","borderTopWidth","borderLeftWidth","borderRightWidth","borderColor","module","exports"],"mappings":"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","sourcesContent":["const React = require('react');\r\nconst { ViewPropTypes } = ReactNative = require('react-native');\r\nconst PropTypes = require('prop-types');\r\nconst createReactClass = require('create-react-class');\r\nconst {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Animated,\r\n  Button\r\n} = ReactNative;\r\n\r\nconst DefaultTabBar = createReactClass({\r\n  propTypes: {\r\n    goToPage: PropTypes.func,\r\n    activeTab: PropTypes.number,\r\n    tabs: PropTypes.array,\r\n    backgroundColor: PropTypes.string,\r\n    activeTextColor: PropTypes.string,\r\n    inactiveTextColor: PropTypes.string,\r\n    textStyle: Text.propTypes.style,\r\n    tabStyle: ViewPropTypes.style,\r\n    renderTab: PropTypes.func,\r\n    underlineStyle: ViewPropTypes.style,\r\n  },\r\n\r\n  getDefaultProps() {\r\n    return {\r\n      activeTextColor: 'navy',\r\n      inactiveTextColor: 'black',\r\n      backgroundColor: null,\r\n    };\r\n  },\r\n\r\n  renderTabOption(name, page) {\r\n  },\r\n\r\n  renderTab(name, page, isTabActive, onPressHandler) {\r\n    const { activeTextColor, inactiveTextColor, textStyle, } = this.props;\r\n    const textColor = isTabActive ? activeTextColor : inactiveTextColor;\r\n    const fontWeight = isTabActive ? 'bold' : 'normal';\r\n\r\n    return <Button\r\n      style={{flex: 1, }}\r\n      key={name}\r\n      accessible={true}\r\n      accessibilityLabel={name}\r\n      accessibilityTraits='button'\r\n      onPress={() => onPressHandler(page)}\r\n    >\r\n      <View style={[styles.tab, this.props.tabStyle, ]}>\r\n        <Text style={[{color: textColor, fontWeight, }, textStyle, ]}>\r\n          {name}\r\n        </Text>\r\n      </View>\r\n    </Button>;\r\n  },\r\n\r\n  render() {\r\n    const containerWidth = this.props.containerWidth;\r\n    const numberOfTabs = this.props.tabs.length;\r\n    const tabUnderlineStyle = {\r\n      position: 'absolute',\r\n      width: containerWidth / numberOfTabs,\r\n      height: 4,\r\n      backgroundColor: 'navy',\r\n      bottom: 0,\r\n    };\r\n\r\n    const translateX = this.props.scrollValue.interpolate({\r\n      inputRange: [0, 1],\r\n      outputRange: [0,  containerWidth / numberOfTabs],\r\n    });\r\n    return (\r\n      <View style={[styles.tabs, {backgroundColor: this.props.backgroundColor, }, this.props.style, ]}>\r\n        {this.props.tabs.map((name, page) => {\r\n          const isTabActive = this.props.activeTab === page;\r\n          const renderTab = this.props.renderTab || this.renderTab;\r\n          return renderTab(name, page, isTabActive, this.props.goToPage);\r\n        })}\r\n        <Animated.View\r\n          style={[\r\n            tabUnderlineStyle,\r\n            {\r\n              transform: [\r\n                { translateX },\r\n              ]\r\n            },\r\n            this.props.underlineStyle,\r\n          ]}\r\n        />\r\n      </View>\r\n    );\r\n  },\r\n});\r\n\r\nconst styles = StyleSheet.create({\r\n  tab: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingBottom: 10,\r\n  },\r\n  tabs: {\r\n    height: 50,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    borderWidth: 1,\r\n    borderTopWidth: 0,\r\n    borderLeftWidth: 0,\r\n    borderRightWidth: 0,\r\n    borderColor: '#ccc',\r\n  },\r\n});\r\n\r\nmodule.exports = DefaultTabBar;"]},"metadata":{},"sourceType":"script"}