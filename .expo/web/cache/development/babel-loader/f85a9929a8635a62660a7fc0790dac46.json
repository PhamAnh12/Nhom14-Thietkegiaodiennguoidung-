{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"F:\\\\Projects\\\\App\\\\screens\\\\ExercisesScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Question from \"../components/Question\";\nimport Card from \"../components/Card\";\nimport questions from \"../components/questions\";\nexport default function ExercisesScreen() {\n  var answers = questions.map(function (question) {\n    return _objectSpread({}, question, {\n      choosedOption: ''\n    });\n  });\n\n  var handleAnswer = function handleAnswer(title, checked) {\n    answers.forEach(function (answer) {\n      if (answer.title === title) {\n        answer.choosedOption = checked;\n      }\n    });\n    console.log('Exercise Screen: ' + title + ' ' + checked);\n    console.log(answers);\n  };\n\n  return React.createElement(FlatList, {\n    data: questions,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, React.createElement(Question, {\n        question: item,\n        onAnswer: handleAnswer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["F:/Projects/App/screens/ExercisesScreen.js"],"names":["React","useState","Question","Card","questions","ExercisesScreen","answers","map","question","choosedOption","handleAnswer","title","checked","forEach","answer","console","log","item"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,OAAOC,QAAP;AACA,OAAOC,IAAP;AACA,OAAOC,SAAP;AAEA,eAAe,SAASC,eAAT,GAA0B;AAErC,MAAMC,OAAO,GAAGF,SAAS,CAACG,GAAV,CAAc,UAACC,QAAD,EAAc;AACxC,6BAAWA,QAAX;AAAqBC,MAAAA,aAAa,EAAE;AAApC;AACH,GAFe,CAAhB;;AAQA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAQC,OAAR,EAAoB;AAIrCN,IAAAA,OAAO,CAACO,OAAR,CAAgB,UAACC,MAAD,EAAY;AACxB,UAAGA,MAAM,CAACH,KAAP,KAAiBA,KAApB,EAA0B;AACtBG,QAAAA,MAAM,CAACL,aAAP,GAAuBG,OAAvB;AACH;AACJ,KAJD;AAKAG,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAoBL,KAApB,GAA2B,GAA3B,GAAgCC,OAA5C;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYV,OAAZ;AACH,GAXD;;AAaA,SACI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAIF,SADZ;AAEI,IAAA,UAAU,EAAI;AAAA,UAAEa,IAAF,QAAEA,IAAF;AAAA,aACV,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAEA,IAApB;AAA0B,QAAA,QAAQ,EAAEP,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADU;AAAA,KAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAUH","sourcesContent":["import React, { useState } from 'react'\r\nimport { FlatList, Button } from 'react-native'\r\nimport Question from '../components/Question'\r\nimport Card from '../components/Card'\r\nimport questions from '../components/questions'\r\n\r\nexport default function ExercisesScreen(){\r\n    // const [answers, setAnswers] = useState([])\r\n    const answers = questions.map((question) => {\r\n        return {...question, choosedOption: ''}\r\n    })\r\n    // const handleAnswer = (choice) => {\r\n    //     answer.choosedOption = choice\r\n    //     setAnswers(answer)\r\n    // }\r\n    // console.log('Excercise Screen '+ answers)\r\n    const handleAnswer = (title, checked) => {\r\n        // if(answers.title = title){\r\n        //     answers.choosedOption = answer\r\n        // }\r\n        answers.forEach((answer) => {\r\n            if(answer.title === title){\r\n                answer.choosedOption = checked\r\n            }\r\n        })\r\n        console.log('Exercise Screen: '+title+ ' ' +checked)\r\n        console.log(answers)\r\n    }\r\n\r\n    return(\r\n        <FlatList \r\n            data = {questions}\r\n            renderItem = {({item}) =>\r\n                <Card>\r\n                    <Question question={item} onAnswer={handleAnswer}/>    \r\n                </Card>\r\n            }\r\n        />\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}