{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Projects\\\\App\\\\screens\\\\FlashcardsPracticeScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Card from \"../components/Card\";\nexport default function FlashcardsPracticeScreen() {\n  var flashcards = [{\n    term: 'term 1',\n    def: 'def 1'\n  }, {\n    term: 'term 2',\n    def: 'def 2'\n  }, {\n    term: 'term 3',\n    def: 'def 3'\n  }, {\n    term: 'term 4',\n    def: 'def 4'\n  }, {\n    term: 'term 5',\n    def: 'def 5'\n  }, {\n    term: 'term 6',\n    def: 'def 6'\n  }, {\n    term: 'term 7',\n    def: 'def 7'\n  }, {\n    term: 'term 8',\n    def: 'def 8'\n  }, {\n    term: 'term 9',\n    def: 'def 9'\n  }, {\n    term: 'term 10',\n    def: 'def 10'\n  }];\n\n  var shuffle = function shuffle(array) {\n    var i = array.length;\n\n    while (i--) {\n      var ri = Math.floor(Math.random() * i);\n      var _ref = [array[ri], array[i]];\n      array[i] = _ref[0];\n      array[ri] = _ref[1];\n    }\n\n    return array;\n  };\n\n  var _useState = useState(shuffle(flashcards.concat())),\n      _useState2 = _slicedToArray(_useState, 2),\n      displayedFlashcards = _useState2[0],\n      setDisplayedFlashcard = _useState2[1];\n\n  var terms = [];\n  flashcards.forEach(function (flashcard) {\n    terms.push({\n      term: flashcard.term\n    });\n  });\n  var defs = [];\n  displayedFlashcards.forEach(function (flashcard) {\n    defs.push({\n      def: flashcard.def\n    });\n  });\n\n  var _useState3 = useState({\n    term: '',\n    def: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      chooseFlashcard = _useState4[0],\n      setChooseFlashcard = _useState4[1];\n\n  var match = {\n    term: chooseFlashcard.term,\n    def: chooseFlashcard.def\n  };\n  console.log(chooseFlashcard);\n  console.log(match);\n  console.log(JSON.stringify(flashcards[chooseFlashcard.id]) === JSON.stringify(match));\n\n  if (JSON.stringify(flashcards[chooseFlashcard.id]) === JSON.stringify(match)) {\n    (function () {\n      return setDisplayedFlashcard(flashcards.filter(function (flashcard) {\n        return flashcard !== flashcards[chooseFlashcard.id];\n      }));\n    });\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '50%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    data: terms,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item,\n          index = _ref2.index;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return setChooseFlashcard(_objectSpread({}, chooseFlashcard, {\n            term: item.term,\n            id: index\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }\n      }, React.createElement(View, {\n        style: {\n          height: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 37\n        }\n      }, item.term))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: {\n      width: '50%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    data: defs,\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return setChooseFlashcard(_objectSpread({}, chooseFlashcard, {\n            def: item.def\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }\n      }, React.createElement(View, {\n        style: {\n          height: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 37\n        }\n      }, item.def))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["F:/Projects/App/screens/FlashcardsPracticeScreen.js"],"names":["React","useState","Card","FlashcardsPracticeScreen","flashcards","term","def","shuffle","array","i","length","ri","Math","floor","random","concat","displayedFlashcards","setDisplayedFlashcard","terms","forEach","flashcard","push","defs","chooseFlashcard","setChooseFlashcard","match","console","log","JSON","stringify","id","filter","flex","flexDirection","width","item","index","height"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { View, FlatList, Text, TouchableOpacity } from 'react-native'\r\nimport Card from '../components/Card'\r\n\r\nexport default function FlashcardsPracticeScreen(){\r\n    const flashcards = [\r\n        {term: 'term 1', def: 'def 1'},\r\n        {term: 'term 2', def: 'def 2'},\r\n        {term: 'term 3', def: 'def 3'},\r\n        {term: 'term 4', def: 'def 4'},\r\n        {term: 'term 5', def: 'def 5'},\r\n        {term: 'term 6', def: 'def 6'},\r\n        {term: 'term 7', def: 'def 7'},\r\n        {term: 'term 8', def: 'def 8'},\r\n        {term: 'term 9', def: 'def 9'},\r\n        {term: 'term 10', def: 'def 10'},\r\n    ]\r\n\r\n    const shuffle = (array) => {\r\n        let i = array.length;\r\n        while (i--) {\r\n            const ri = Math.floor(Math.random() * i);\r\n            [array[i], array[ri]] = [array[ri], array[i]];\r\n        }\r\n        return array;\r\n    }\r\n\r\n    const [displayedFlashcards, setDisplayedFlashcard] = useState(shuffle(flashcards.concat()))\r\n    const terms = []\r\n    flashcards.forEach((flashcard) => {\r\n        terms.push({term: flashcard.term})\r\n    })\r\n    const defs = []\r\n    displayedFlashcards.forEach((flashcard) => {\r\n        defs.push({def: flashcard.def})\r\n    })\r\n\r\n    const [chooseFlashcard, setChooseFlashcard] = useState({term: '', def: ''})\r\n    const match = {term: chooseFlashcard.term, def: chooseFlashcard.def}\r\n    console.log(chooseFlashcard)\r\n    console.log(match)\r\n    console.log(JSON.stringify(flashcards[chooseFlashcard.id]) === JSON.stringify(match))\r\n\r\n    if(JSON.stringify(flashcards[chooseFlashcard.id]) === JSON.stringify(match)){\r\n        () => setDisplayedFlashcard(flashcards.filter((flashcard) => flashcard !== flashcards[chooseFlashcard.id]))\r\n    }\r\n    \r\n    return(\r\n        <View style={{flex: 1, flexDirection: 'row'}}>\r\n            <View style={{width: '50%'}}>\r\n                <FlatList\r\n                    data={terms}\r\n                    renderItem={({item, index}) => (\r\n                        <TouchableOpacity\r\n                            onPress={() => setChooseFlashcard(\r\n                                {...chooseFlashcard, \r\n                                term: item.term, id: index})}\r\n                        >\r\n                            <Card>\r\n                                <View style={{height: 50}}>\r\n                                    <Text>{item.term}</Text>\r\n                                </View>\r\n                            </Card>\r\n                        </TouchableOpacity>\r\n                    )}\r\n                />\r\n            </View>\r\n            <View style={{width: '50%'}}>\r\n                <FlatList\r\n                    data={defs}\r\n                    renderItem={({item}) => (\r\n                        <TouchableOpacity\r\n                            onPress={() => setChooseFlashcard({...chooseFlashcard, def: item.def})}\r\n                        >\r\n                            <Card>\r\n                                <View style={{height: 50}}>\r\n                                    <Text>{item.def}</Text>\r\n                                </View>\r\n                            </Card>\r\n                        </TouchableOpacity>\r\n                    )}\r\n                />\r\n            </View>\r\n        </View>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}