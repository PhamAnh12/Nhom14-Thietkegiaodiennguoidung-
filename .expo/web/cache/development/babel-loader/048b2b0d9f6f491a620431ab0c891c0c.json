{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Projects\\\\App\\\\screens\\\\GuideScreen.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Card from \"../components/Card\";\nimport questions from \"../components/questions\";\nexport default function GuideScreen() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      index = _useState2[0],\n      setIndex = _useState2[1];\n\n  if (index < 3) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }\n    }, \"Guide Screen Questions \", index + 1), React.createElement(Button, {\n      title: \"Next Question\",\n      onPress: function onPress() {\n        return setIndex(index + 1);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }\n    }), React.createElement(FlatList, {\n      data: [{\n        key: 'first'\n      }, {\n        key: 'second'\n      }, {\n        key: 'third'\n      }, {\n        key: 'fourth'\n      }],\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return React.createElement(TouchableOpacity, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }\n        }, React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 29\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 33\n          }\n        }, item.key)));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    }));\n  } else {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, \"Guide Screen Result\"));\n  }\n}","map":{"version":3,"sources":["F:/Projects/App/screens/GuideScreen.js"],"names":["React","useState","Card","questions","GuideScreen","index","setIndex","flex","alignItems","key","item","justifyContent"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAEA,OAAOC,IAAP;AACA,OAAOC,SAAP;AAEA,eAAe,SAASC,WAAT,GAAsB;AAAA,kBACPH,QAAQ,CAAC,CAAD,CADD;AAAA;AAAA,MAC1BI,KAD0B;AAAA,MACnBC,QADmB;;AAGjC,MAAGD,KAAK,GAAG,CAAX,EAAa;AACT,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACE,QAAAA,IAAI,EAAE,CAAP;AAAUC,QAAAA,UAAU,EAAE;AAAtB,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAA8BH,KAAK,GAAG,CAAtC,CADJ,EAEI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,eAAd;AAA8B,MAAA,OAAO,EAAE;AAAA,eAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAd;AAAA,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,QAAD;AACI,MAAA,IAAI,EAAE,CAAC;AAACI,QAAAA,GAAG,EAAE;AAAN,OAAD,EAAgB;AAACA,QAAAA,GAAG,EAAE;AAAN,OAAhB,EAAgC;AAACA,QAAAA,GAAG,EAAE;AAAN,OAAhC,EAA+C;AAACA,QAAAA,GAAG,EAAE;AAAN,OAA/C,CADV;AAEI,MAAA,UAAU,EAAE;AAAA,YAAEC,IAAF,QAAEA,IAAF;AAAA,eACR,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOA,IAAI,CAACD,GAAZ,CADJ,CADJ,CADQ;AAAA,OAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAgBH,GAjBD,MAkBK;AACD,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACF,QAAAA,IAAI,EAAE,CAAP;AAAUC,QAAAA,UAAU,EAAE,QAAtB;AAAgCG,QAAAA,cAAc,EAAE;AAAhD,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,CADJ;AAKH;AACJ","sourcesContent":["import React, { useState } from 'react'\r\nimport { View, Text, Button, TouchableOpacity, FlatList } from 'react-native'\r\nimport Card from '../components/Card'\r\nimport questions from '../components/questions'\r\n\r\nexport default function GuideScreen(){\r\n    const [index, setIndex] = useState(0)\r\n\r\n    if(index < 3){\r\n        return(\r\n            <View style={{flex: 1, alignItems: 'center'}}>\r\n                <Text>Guide Screen Questions {index + 1}</Text>\r\n                <Button title='Next Question' onPress={() => setIndex(index + 1)}/>\r\n                <FlatList \r\n                    data={[{key: 'first'},{key: 'second'},{key: 'third'},{key: 'fourth'}]}\r\n                    renderItem={({item}) => (\r\n                        <TouchableOpacity>\r\n                            <Card>\r\n                                <Text>{item.key}</Text>\r\n                            </Card>\r\n                        </TouchableOpacity>\r\n                    )}\r\n                />\r\n            </View>\r\n        )\r\n    }\r\n    else {\r\n        return(\r\n            <View style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\r\n                <Text>Guide Screen Result</Text>\r\n            </View>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}