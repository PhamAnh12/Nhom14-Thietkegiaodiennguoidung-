{"ast":null,"code":"var _jsxFileName = \"F:\\\\Projects\\\\App\\\\screens\\\\ExplanationsScreen.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Card from \"../components/Card\";\nimport db from \"../services/firebase\";\nexport default function ExplanationsScreen() {\n  var Unit1 = [];\n  db.collection('contents').doc('unit_1').get().then(function (snapshot) {\n    console.log(snapshot.data().explanation);\n  });\n  console.log(Unit1);\n\n  var displayText = function displayText(text) {\n    if (text.includes('<b>')) {\n      return React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }\n      }, text.split('<b>').map(function (value, index) {\n        return index % 2 == 0 ? React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }\n        }, value) : React.createElement(Text, {\n          style: styles.bold,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }\n        }, value);\n      }));\n    } else if (text.includes('<i>')) {\n      return React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, text.split('<i>').map(function (value, index) {\n        return index % 2 == 0 ? React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }\n        }, value) : React.createElement(Text, {\n          style: styles.italic,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }\n        }, value);\n      }));\n    } else if (text.includes('<u>')) {\n      return React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, text.split('<u>').map(function (value, index) {\n        return index % 2 == 0 ? React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }\n        }, value) : React.createElement(Text, {\n          style: styles.underline,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }\n        }, value);\n      }));\n    } else return React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, text);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    data: Unit1,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold',\n          color: '#3F448C'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }\n      }, item.title), item.sub_explanation.map(function (value) {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }\n        }, value.title), value.examples.map(function (value) {\n          return React.createElement(Text, {\n            style: styles.italic,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 41\n            }\n          }, displayText('      ' + value));\n        }));\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  bold: {\n    fontWeight: 'bold'\n  },\n  italic: {\n    fontStyle: 'italic'\n  },\n  underline: {\n    textDecorationLine: 'underline'\n  }\n});","map":{"version":3,"sources":["F:/Projects/App/screens/ExplanationsScreen.js"],"names":["React","Card","db","ExplanationsScreen","Unit1","collection","doc","get","then","snapshot","console","log","data","explanation","displayText","text","includes","split","map","value","index","styles","bold","italic","underline","flex","alignItems","justifyContent","item","fontWeight","color","title","sub_explanation","examples","StyleSheet","create","fontStyle","textDecorationLine"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {View, Text, FlatList, StyleSheet} from 'react-native'\r\nimport Card from '../components/Card'\r\n// import Unit1 from '../components/Unit1'\r\nimport db from '../services/firebase'\r\n\r\nexport default function ExplanationsScreen(){\r\n    var Unit1 = []\r\n    db.collection('contents').doc('unit_1').get().then((snapshot) => {\r\n        console.log(snapshot.data().explanation)\r\n    })\r\n    console.log(Unit1)\r\n    const displayText = (text) => {\r\n        if(text.includes('<b>')){\r\n        return(\r\n            <Text>\r\n                {text.split('<b>').map((value, index) => {\r\n                    return (index % 2 == 0) ? \r\n                        <Text>{value}</Text> :\r\n                        <Text style={styles.bold}>{value}</Text>\r\n                })}\r\n            </Text>\r\n        )}\r\n        else if(text.includes('<i>')){\r\n        return(\r\n            <Text>\r\n                {text.split('<i>').map((value, index) => {\r\n                    return (index % 2 == 0) ? \r\n                        <Text>{value}</Text> :\r\n                        <Text style={styles.italic}>{value}</Text>\r\n                })}\r\n            </Text>\r\n        )}\r\n        else if(text.includes('<u>')){\r\n        return(\r\n            <Text>\r\n                {text.split('<u>').map((value, index) => {\r\n                    return (index % 2 == 0) ? \r\n                        <Text>{value}</Text> :\r\n                        <Text style={styles.underline}>{value}</Text>\r\n                })}\r\n            </Text>\r\n        )}\r\n        else \r\n        return(\r\n            <Text>{text}</Text>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <View style={{flex: 1, alignItems: 'center', justifyContent:'center'}}>\r\n            <FlatList \r\n                data = {Unit1}\r\n                renderItem = {({item}) =>\r\n                    <Card>\r\n                        <Text style={{fontWeight: 'bold', color: '#3F448C'}}>{item.title}</Text>\r\n                        {item.sub_explanation.map((value) => {\r\n                            return(\r\n                                <View>\r\n                                <Text>{value.title}</Text>\r\n                                {value.examples.map((value) => {\r\n                                    return(\r\n                                        <Text style={styles.italic}>\r\n                                        {displayText('      '+value)}\r\n                                        </Text>\r\n                                    )\r\n                                })}\r\n                            </View>\r\n                            )\r\n                        })}\r\n                    </Card>\r\n                }\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    bold: {fontWeight: 'bold'},\r\n    italic: {fontStyle: 'italic'},\r\n    underline: {textDecorationLine: 'underline'}\r\n})"]},"metadata":{},"sourceType":"module"}