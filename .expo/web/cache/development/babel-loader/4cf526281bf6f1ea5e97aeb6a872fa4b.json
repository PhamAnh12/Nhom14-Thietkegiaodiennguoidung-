{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Projects\\\\App\\\\screens\\\\ExercisesScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Question from \"../components/Question\";\nimport Card from \"../components/Card\";\nimport questions from \"../components/questions\";\nexport default function ExercisesScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      answers = _useState2[0],\n      setAnswers = _useState2[1];\n\n  var answer = questions.map(function (question) {\n    return _objectSpread({}, question, {\n      choosedOption: ''\n    });\n  });\n\n  var handleAnswer = function handleAnswer(choice) {\n    return setAnswer(choice);\n  };\n\n  console.log('Excercise Screen ' + answer);\n  return React.createElement(FlatList, {\n    data: answer,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }\n      }, React.createElement(Question, {\n        question: item,\n        onAnswer: handleAnswer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["F:/Projects/App/screens/ExercisesScreen.js"],"names":["React","useState","Question","Card","questions","ExercisesScreen","answers","setAnswers","answer","map","question","choosedOption","handleAnswer","choice","setAnswer","console","log","item"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,OAAOC,QAAP;AACA,OAAOC,IAAP;AACA,OAAOC,SAAP;AAEA,eAAe,SAASC,eAAT,GAA0B;AAAA,kBACPJ,QAAQ,CAAC,EAAD,CADD;AAAA;AAAA,MAC9BK,OAD8B;AAAA,MACrBC,UADqB;;AAErC,MAAMC,MAAM,GAAGJ,SAAS,CAACK,GAAV,CAAc,UAACC,QAAD,EAAc;AACvC,6BAAWA,QAAX;AAAqBC,MAAAA,aAAa,EAAE;AAApC;AACH,GAFc,CAAf;;AAGA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD;AAAA,WAAYC,SAAS,CAACD,MAAD,CAArB;AAAA,GAArB;;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAqBR,MAAjC;AAEA,SACI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAIA,MADZ;AAEI,IAAA,UAAU,EAAI;AAAA,UAAES,IAAF,QAAEA,IAAF;AAAA,aACV,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAEA,IAApB;AAA0B,QAAA,QAAQ,EAAEL,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADU;AAAA,KAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAUH","sourcesContent":["import React, { useState } from 'react'\r\nimport { FlatList, Button } from 'react-native'\r\nimport Question from '../components/Question'\r\nimport Card from '../components/Card'\r\nimport questions from '../components/questions'\r\n\r\nexport default function ExercisesScreen(){\r\n    const [answers, setAnswers] = useState([])\r\n    const answer = questions.map((question) => {\r\n        return {...question, choosedOption: ''}\r\n    })\r\n    const handleAnswer = (choice) => setAnswer(choice)\r\n    console.log('Excercise Screen '+ answer)\r\n\r\n    return(\r\n        <FlatList \r\n            data = {answer}\r\n            renderItem = {({item}) =>\r\n                <Card>\r\n                    <Question question={item} onAnswer={handleAnswer}/>    \r\n                </Card>\r\n            }\r\n        />\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}