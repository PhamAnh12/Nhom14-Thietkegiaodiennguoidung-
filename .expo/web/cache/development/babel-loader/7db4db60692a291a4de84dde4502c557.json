{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"F:\\\\Projects\\\\App\\\\screens\\\\UnitScreen.js\";\n\nfunction _createSuper(Derived) {\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { TabViewAnimated, TabBar, SceneMap } from 'react-native-tab-view';\nvar initialLayout = {\n  height: 0,\n  width: Dimensions.get('window').width\n};\n\nvar FirstRoute = function FirstRoute() {\n  return React.createElement(View, {\n    style: [styles.container, {\n      backgroundColor: '#ff4081'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 26\n    }\n  });\n};\n\nvar SecondRoute = function SecondRoute() {\n  return React.createElement(View, {\n    style: [styles.container, {\n      backgroundColor: '#673ab7'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 27\n    }\n  });\n};\n\nvar TabViewExample = function (_React$Component) {\n  _inherits(TabViewExample, _React$Component);\n\n  var _super = _createSuper(TabViewExample);\n\n  function TabViewExample() {\n    var _this;\n\n    _classCallCheck(this, TabViewExample);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      index: 0,\n      routes: [{\n        key: 'first',\n        title: 'First'\n      }, {\n        key: 'second',\n        title: 'Second'\n      }]\n    };\n\n    _this._handleIndexChange = function (index) {\n      return _this.setState({\n        index: index\n      });\n    };\n\n    _this._renderHeader = function (props) {\n      return React.createElement(TabBar, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 28\n        }\n      }));\n    };\n\n    _this._renderScene = SceneMap({\n      first: FirstRoute,\n      second: SecondRoute\n    });\n    return _this;\n  }\n\n  _createClass(TabViewExample, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(TabViewAnimated, {\n        navigationState: this.state,\n        renderScene: this._renderScene,\n        renderHeader: this._renderHeader,\n        onIndexChange: this._handleIndexChange,\n        initialLayout: initialLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return TabViewExample;\n}(React.Component);\n\nexport { TabViewExample as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["F:/Projects/App/screens/UnitScreen.js"],"names":["React","TabViewAnimated","TabBar","SceneMap","initialLayout","height","width","Dimensions","get","FirstRoute","styles","container","backgroundColor","SecondRoute","TabViewExample","state","index","routes","key","title","_handleIndexChange","setState","_renderHeader","props","_renderScene","first","second","Component","StyleSheet","create","flex"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAEA,SAASC,eAAT,EAA0BC,MAA1B,EAAkCC,QAAlC,QAAkD,uBAAlD;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,CADY;AAEpBC,EAAAA,KAAK,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF;AAFZ,CAAtB;;AAKA,IAAMG,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAM,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAAEC,MAAM,CAACC,SAAT,EAAoB;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAApB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAN;AAAA,CAAnB;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAM,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAAEH,MAAM,CAACC,SAAT,EAAoB;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAApB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAN;AAAA,CAApB;;IAEqBE,c;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,CADD;AAENC,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,GAAG,EAAE,OAAP;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OADM,EAEN;AAAED,QAAAA,GAAG,EAAE,QAAP;AAAiBC,QAAAA,KAAK,EAAE;AAAxB,OAFM;AAFF,K;;UAQRC,kB,GAAqB,UAAAJ,KAAK;AAAA,aAAI,MAAKK,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAALA;AAAF,OAAd,CAAJ;AAAA,K;;UAE1BM,a,GAAgB,UAAAC,KAAK;AAAA,aAAI,oBAAC,MAAD,eAAYA,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAJ;AAAA,K;;UAErBC,Y,GAAerB,QAAQ,CAAC;AACtBsB,MAAAA,KAAK,EAAEhB,UADe;AAEtBiB,MAAAA,MAAM,EAAEb;AAFc,KAAD,C;;;;;;6BAKd;AACP,aACE,oBAAC,eAAD;AACE,QAAA,eAAe,EAAE,KAAKE,KADxB;AAEE,QAAA,WAAW,EAAE,KAAKS,YAFpB;AAGE,QAAA,YAAY,EAAE,KAAKF,aAHrB;AAIE,QAAA,aAAa,EAAE,KAAKF,kBAJtB;AAKE,QAAA,aAAa,EAAEhB,aALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AASD;;;;EA5ByCJ,KAAK,CAAC2B,S;;SAA7Bb,c;AA+BrB,IAAMJ,MAAM,GAAGkB,UAAU,CAACC,MAAX,CAAkB;AAC/BlB,EAAAA,SAAS,EAAE;AACTmB,IAAAA,IAAI,EAAE;AADG;AADoB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\r\nimport { View, StyleSheet, Dimensions } from 'react-native';\r\nimport { TabViewAnimated, TabBar, SceneMap } from 'react-native-tab-view';\r\n\r\nconst initialLayout = {\r\n  height: 0,\r\n  width: Dimensions.get('window').width,\r\n};\r\n\r\nconst FirstRoute = () => <View style={[ styles.container, { backgroundColor: '#ff4081' } ]} />;\r\nconst SecondRoute = () => <View style={[ styles.container, { backgroundColor: '#673ab7' } ]} />;\r\n\r\nexport default class TabViewExample extends React.Component {\r\n  state = {\r\n    index: 0,\r\n    routes: [\r\n      { key: 'first', title: 'First' },\r\n      { key: 'second', title: 'Second' },\r\n    ],\r\n  };\r\n\r\n  _handleIndexChange = index => this.setState({ index });\r\n\r\n  _renderHeader = props => <TabBar {...props} />;\r\n\r\n  _renderScene = SceneMap({\r\n    first: FirstRoute,\r\n    second: SecondRoute,\r\n  });\r\n\r\n  render() {\r\n    return (\r\n      <TabViewAnimated\r\n        navigationState={this.state}\r\n        renderScene={this._renderScene}\r\n        renderHeader={this._renderHeader}\r\n        onIndexChange={this._handleIndexChange}\r\n        initialLayout={initialLayout}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}