{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Projects\\\\App\\\\components\\\\Question.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { RadioButton } from 'react-native-paper';\nexport default function Question(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      check = _useState2[0],\n      setCheck = _useState2[1];\n\n  props.onAnswer(props.question.title, check);\n  return React.createElement(View, {\n    style: styles.questionForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.questionTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, props.question.title), React.createElement(RadioButton.Group, {\n    onValueChange: function onValueChange(value) {\n      return setCheck(value);\n    },\n    value: check,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    data: props.question.options,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.answer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }\n      }, React.createElement(RadioButton, {\n        value: item.key,\n        color: \"#3F448C\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          setCheck(item.key);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }\n      }, item.key)));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  questionForm: {\n    paddingHorizontal: '10px'\n  },\n  questionTitle: {\n    paddingVertical: '5px',\n    fontWeight: 'bold',\n    color: '#3F448C'\n  },\n  answer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: -6\n  }\n});","map":{"version":3,"sources":["F:/Projects/App/components/Question.js"],"names":["React","useState","RadioButton","Question","props","check","setCheck","onAnswer","question","title","styles","questionForm","questionTitle","value","options","item","answer","key","StyleSheet","create","paddingHorizontal","paddingVertical","fontWeight","color","flexDirection","alignItems","marginVertical"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAEA,SAAQC,WAAR,QAA0B,oBAA1B;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,kBACVH,QAAQ,CAAC,EAAD,CADE;AAAA;AAAA,MAC7BI,KAD6B;AAAA,MACtBC,QADsB;;AAEpCF,EAAAA,KAAK,CAACG,QAAN,CAAeH,KAAK,CAACI,QAAN,CAAeC,KAA9B,EAAqCJ,KAArC;AAEA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEK,MAAM,CAACC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCR,KAAK,CAACI,QAAN,CAAeC,KAAnD,CADJ,EAEI,oBAAC,WAAD,CAAa,KAAb;AACI,IAAA,aAAa,EAAE,uBAACI,KAAD;AAAA,aAAWP,QAAQ,CAACO,KAAD,CAAnB;AAAA,KADnB;AAEI,IAAA,KAAK,EAAER,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIA,oBAAC,QAAD;AACI,IAAA,IAAI,EAAID,KAAK,CAACI,QAAN,CAAeM,OAD3B;AAEI,IAAA,UAAU,EAAK;AAAA,UAAEC,IAAF,QAAEA,IAAF;AAAA,aACf,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEL,MAAM,CAACM,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AACI,QAAA,KAAK,EAAED,IAAI,CAACE,GADhB;AAEI,QAAA,KAAK,EAAC,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAKI,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE,mBAAM;AAACX,UAAAA,QAAQ,CAACS,IAAI,CAACE,GAAN,CAAR;AAAmB,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOF,IAAI,CAACE,GAAZ,CADJ,CALJ,CADe;AAAA,KAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,CAFJ,CADJ;AAwBH;AAED,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC7BR,EAAAA,YAAY,EAAE;AACVS,IAAAA,iBAAiB,EAAE;AADT,GADe;AAI7BR,EAAAA,aAAa,EAAE;AACXS,IAAAA,eAAe,EAAE,KADN;AAEXC,IAAAA,UAAU,EAAE,MAFD;AAGXC,IAAAA,KAAK,EAAE;AAHI,GAJc;AAS7BP,EAAAA,MAAM,EAAE;AACJQ,IAAAA,aAAa,EAAE,KADX;AAEJC,IAAAA,UAAU,EAAE,QAFR;AAGJC,IAAAA,cAAc,EAAE,CAAC;AAHb;AATqB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { View, Text, StyleSheet, FlatList, TouchableOpacity } from 'react-native'\r\nimport {RadioButton} from 'react-native-paper'\r\n\r\nexport default function Question(props) {\r\n    const [check, setCheck] = useState('')\r\n    props.onAnswer(props.question.title, check)\r\n\r\n    return (\r\n        <View style={styles.questionForm}>\r\n            <Text style={styles.questionTitle}>{props.question.title}</Text>\r\n            <RadioButton.Group\r\n                onValueChange={(value) => setCheck(value)}\r\n                value={check}\r\n            >\r\n            <FlatList \r\n                data = {props.question.options}\r\n                renderItem = { ({item}) => (\r\n                <View style={styles.answer}>\r\n                    <RadioButton \r\n                        value={item.key}\r\n                        color='#3F448C'\r\n                    />\r\n                    <TouchableOpacity onPress={() => {setCheck(item.key)}}>\r\n                        <Text>{item.key}</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                )}\r\n            />\r\n            </RadioButton.Group>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    questionForm: {\r\n        paddingHorizontal: '10px'\r\n    },\r\n    questionTitle: {\r\n        paddingVertical: '5px',\r\n        fontWeight: 'bold',\r\n        color: '#3F448C'\r\n    },\r\n    answer: {\r\n        flexDirection: 'row', \r\n        alignItems: 'center', \r\n        marginVertical: -6\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}