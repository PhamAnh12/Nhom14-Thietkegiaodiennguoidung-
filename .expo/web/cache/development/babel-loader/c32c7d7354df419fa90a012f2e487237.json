{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Projects\\\\App\\\\screens\\\\FlashcardsPracticeScreen.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Card from \"../components/Card\";\nexport default function FlashcardsPracticeScreen() {\n  var flashcards = [{\n    term: 'term 1',\n    def: 'def 1'\n  }, {\n    term: 'term 2',\n    def: 'def 2'\n  }, {\n    term: 'term 3',\n    def: 'def 3'\n  }, {\n    term: 'term 4',\n    def: 'def 4'\n  }, {\n    term: 'term 5',\n    def: 'def 5'\n  }, {\n    term: 'term 6',\n    def: 'def 6'\n  }, {\n    term: 'term 7',\n    def: 'def 7'\n  }, {\n    term: 'term 8',\n    def: 'def 8'\n  }, {\n    term: 'term 9',\n    def: 'def 9'\n  }, {\n    term: 'term 10',\n    def: 'def 10'\n  }];\n\n  var _useState = useState({\n    term: '',\n    def: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      chooseFlashcard = _useState2[0],\n      setChooseFlashcard = _useState2[1];\n\n  console.log(chooseFlashcard);\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '50%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    data: flashcards,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return setChooseFlashcard(item.term);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }\n      }, React.createElement(View, {\n        style: {\n          height: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 37\n        }\n      }, item.term))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: {\n      width: '50%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    data: flashcards,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 46\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 52\n        }\n      }, item.def));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["F:/Projects/App/screens/FlashcardsPracticeScreen.js"],"names":["React","useState","Card","FlashcardsPracticeScreen","flashcards","term","def","chooseFlashcard","setChooseFlashcard","console","log","flex","flexDirection","width","item","height"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { View, FlatList, Text, TouchableOpacity } from 'react-native'\r\nimport Card from '../components/Card'\r\n\r\nexport default function FlashcardsPracticeScreen(){\r\n    const flashcards = [\r\n        {term: 'term 1', def: 'def 1'},\r\n        {term: 'term 2', def: 'def 2'},\r\n        {term: 'term 3', def: 'def 3'},\r\n        {term: 'term 4', def: 'def 4'},\r\n        {term: 'term 5', def: 'def 5'},\r\n        {term: 'term 6', def: 'def 6'},\r\n        {term: 'term 7', def: 'def 7'},\r\n        {term: 'term 8', def: 'def 8'},\r\n        {term: 'term 9', def: 'def 9'},\r\n        {term: 'term 10', def: 'def 10'},\r\n    ]\r\n\r\n    const [chooseFlashcard, setChooseFlashcard] = useState({term: '', def: ''})\r\n    console.log(chooseFlashcard)\r\n\r\n    return(\r\n        <View style={{flex: 1, flexDirection: 'row'}}>\r\n            <View style={{width: '50%'}}>\r\n                <FlatList\r\n                    data={flashcards}\r\n                    renderItem={({item}) => (\r\n                        <TouchableOpacity\r\n                            onPress={() => setChooseFlashcard(item.term)}\r\n                        >\r\n                            <Card>\r\n                                <View style={{height: 50}}>\r\n                                    <Text>{item.term}</Text>\r\n                                </View>\r\n                            </Card>\r\n                        </TouchableOpacity>\r\n                    )}\r\n                />\r\n            </View>\r\n            <View style={{width: '50%'}}>\r\n                <FlatList\r\n                    data={flashcards}\r\n                    renderItem={({item}) => (<View><Text>{item.def}</Text></View>)}\r\n                />\r\n            </View>\r\n        </View>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}