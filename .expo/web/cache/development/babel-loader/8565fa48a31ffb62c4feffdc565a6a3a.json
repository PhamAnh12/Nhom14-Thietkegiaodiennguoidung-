{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Projects\\\\App\\\\screens\\\\FlashcardsPracticeScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Card from \"../components/Card\";\nexport default function FlashcardsPracticeScreen() {\n  var flashcards = [{\n    term: 'term 1',\n    def: 'def 1'\n  }, {\n    term: 'term 2',\n    def: 'def 2'\n  }, {\n    term: 'term 3',\n    def: 'def 3'\n  }, {\n    term: 'term 4',\n    def: 'def 4'\n  }, {\n    term: 'term 5',\n    def: 'def 5'\n  }, {\n    term: 'term 6',\n    def: 'def 6'\n  }, {\n    term: 'term 7',\n    def: 'def 7'\n  }, {\n    term: 'term 8',\n    def: 'def 8'\n  }, {\n    term: 'term 9',\n    def: 'def 9'\n  }, {\n    term: 'term 10',\n    def: 'def 10'\n  }];\n\n  function shuffle(array) {\n    var i = array.length;\n\n    while (i--) {\n      var ri = Math.floor(Math.random() * (i + 1));\n      var _ref = [array[ri], array[i]];\n      array[i] = _ref[0];\n      array[ri] = _ref[1];\n    }\n\n    return array;\n  }\n\n  var defs = [];\n  flashcards.forEach(function (flashcard) {\n    defs.push({\n      term: flashcard.term\n    });\n  });\n  console.log(defs);\n\n  var _useState = useState({\n    term: '',\n    def: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      chooseFlashcard = _useState2[0],\n      setChooseFlashcard = _useState2[1];\n\n  console.log(chooseFlashcard);\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '50%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    data: flashcards,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return setChooseFlashcard(_objectSpread({}, chooseFlashcard, {\n            term: item.term\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }\n      }, React.createElement(View, {\n        style: {\n          height: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 37\n        }\n      }, item.term))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: {\n      width: '50%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    data: defs,\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return setChooseFlashcard(_objectSpread({}, chooseFlashcard, {\n            def: item.def\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }\n      }, React.createElement(View, {\n        style: {\n          height: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 37\n        }\n      }, item.def))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["F:/Projects/App/screens/FlashcardsPracticeScreen.js"],"names":["React","useState","Card","FlashcardsPracticeScreen","flashcards","term","def","shuffle","array","i","length","ri","Math","floor","random","defs","forEach","flashcard","push","console","log","chooseFlashcard","setChooseFlashcard","flex","flexDirection","width","item","height"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { View, FlatList, Text, TouchableOpacity } from 'react-native'\r\nimport Card from '../components/Card'\r\n\r\nexport default function FlashcardsPracticeScreen(){\r\n    const flashcards = [\r\n        {term: 'term 1', def: 'def 1'},\r\n        {term: 'term 2', def: 'def 2'},\r\n        {term: 'term 3', def: 'def 3'},\r\n        {term: 'term 4', def: 'def 4'},\r\n        {term: 'term 5', def: 'def 5'},\r\n        {term: 'term 6', def: 'def 6'},\r\n        {term: 'term 7', def: 'def 7'},\r\n        {term: 'term 8', def: 'def 8'},\r\n        {term: 'term 9', def: 'def 9'},\r\n        {term: 'term 10', def: 'def 10'},\r\n    ]\r\n\r\n    function shuffle(array) {\r\n        let i = array.length;\r\n        while (i--) {\r\n          const ri = Math.floor(Math.random() * (i + 1));\r\n          [array[i], array[ri]] = [array[ri], array[i]];\r\n        }\r\n        return array;\r\n      }\r\n\r\n    var defs = []\r\n    flashcards.forEach((flashcard) => {\r\n        defs.push({term: flashcard.term})\r\n    })\r\n    console.log(defs)\r\n\r\n    const [chooseFlashcard, setChooseFlashcard] = useState({term: '', def: ''})\r\n    console.log(chooseFlashcard)\r\n\r\n    return(\r\n        <View style={{flex: 1, flexDirection: 'row'}}>\r\n            <View style={{width: '50%'}}>\r\n                <FlatList\r\n                    data={flashcards}\r\n                    renderItem={({item}) => (\r\n                        <TouchableOpacity\r\n                            onPress={() => setChooseFlashcard({...chooseFlashcard, term: item.term})}\r\n                        >\r\n                            <Card>\r\n                                <View style={{height: 50}}>\r\n                                    <Text>{item.term}</Text>\r\n                                </View>\r\n                            </Card>\r\n                        </TouchableOpacity>\r\n                    )}\r\n                />\r\n            </View>\r\n            <View style={{width: '50%'}}>\r\n                <FlatList\r\n                    data={defs}\r\n                    renderItem={({item}) => (\r\n                        <TouchableOpacity\r\n                            onPress={() => setChooseFlashcard({...chooseFlashcard, def: item.def})}\r\n                        >\r\n                            <Card>\r\n                                <View style={{height: 50}}>\r\n                                    <Text>{item.def}</Text>\r\n                                </View>\r\n                            </Card>\r\n                        </TouchableOpacity>\r\n                    )}\r\n                />\r\n            </View>\r\n        </View>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}